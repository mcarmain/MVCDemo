@model MVCDemo.Models.PagedList<MVCDemo.Models.Book>
@{
    ViewBag.Title = "Book List";
}

<h1>Book List</h1>
<div class="well">
    @using (Html.BeginForm("index", null, FormMethod.Get))
    {
        <div class="row">
            <div class="col-sm-8">
                <div class="input-group">
                    @Html.TextBoxFor(m => m.filter, new { id = "filter", name = "filter", placeholder= "Search", @class = "form-control", @style = "display:inline" })
                    @*<input type="text"
                                       name="filter"
                                       value="@ViewBag.filter"
                                       class="form-control"
                                       style="display: inline"
                                       placeholder="Search by name and description" />*@
                    <span class="input-group-btn">
                        <button class="btn btn-default" type="submit">Go</button>
                    </span>
                </div>
            </div>
            <div class="pull-right col-lg-1">
                <a class="btn btn-success" data-modal="" href="/Book/Create" id="btnCreate">
                    <span class="glyphicon glyphicon-plus"></span>
                </a>
            </div>
        </div>
        <div style="margin-top:17px;">
            @{      var grid = new WebGrid(
                          canPage: true,
                          rowsPerPage: Model.PageSize,
                          canSort: true,
                          ajaxUpdateContainerId: "grid");
                grid.Bind(Model.Content, rowCount: Model.TotalRecords, autoSortAndPage: false);
                grid.Pager(WebGridPagerModes.All);
                @grid.GetHtml(htmlAttributes: new { id = "grid" },   // id for ajaxUpdateContainerId parameter
                    fillEmptyRows: false,
                    tableStyle: "table table-bordered table-hover",
                    mode: WebGridPagerModes.All,
                    columns: grid.Columns(
                        grid.Column("Id", "ID", style: "col-lg-1"),
                        grid.Column("Title", "Title", style: "col-lg-1"),
                        grid.Column("Summary", "Summary", style: "col-lg-2"),
                        grid.Column("BookGenre.Name", "Genre", style: "col-lg-1"),
                        grid.Column("Author", "Author", style: "col-lg-1"),
                        grid.Column("Publisher", "Publisher", style: "col-lg-2"),
                       grid.Column(header: "Action", canSort: false, style: "action",
                            format: @<text>
                             @Html.Raw("<a data-modal='' href='/Book/details/" + item.Id + "' id='" + item.Id + "' title='Detail'> <span class='glyphicon glyphicon-search'> </span> </a>")
                            @Html.Raw("<a data-modal='' href='/Book/edit/" + item.Id + "' id='" + item.Id + "' title='Edit'> <span class='glyphicon glyphicon-edit'> </span> </a>")
                            @Html.Raw("<a data-modal='' href='/Book/delete/" + item.Id + "' id='" + item.Id + "' title='Delete'> <span class='glyphicon glyphicon-trash'> </span> </a>")
                            </text>)));
            }
        </div>
        }
</div>

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/Client/Scripts/modal.js")
}
